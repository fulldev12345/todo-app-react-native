{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Header from \"./Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TodoInput = function TodoInput(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredTask = _useState2[0],\n    setEnteredTask = _useState2[1];\n  var TodoInputHandler = function TodoInputHandler(enteredText) {\n    setEnteredTask(enteredText);\n  };\n  var addTaskHandler = function addTaskHandler() {\n    props.onAddTask(enteredTask);\n    setEnteredTask(\"\");\n  };\n  var checkInput = function checkInput(enteredTask) {\n    if (enteredTask.length > 0) addTaskHandler();else {\n      Alert.alert(\"Error\", \"Please enter a Task\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n    }\n  };\n  return _jsxs(Modal, {\n    visible: props.visible,\n    animationType: \"slide\",\n    children: [_jsx(Header, {\n      title: \"To-Do App\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Task\",\n        style: styles.input,\n        onChangeText: TodoInputHandler,\n        value: enteredTask\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            title: \"CANCEL\",\n            color: \"red\",\n            onPress: props.onCancel\n          })\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            title: \"ADD\",\n            color: \"green\",\n            onPress: function onPress() {\n              return checkInput(enteredTask);\n            }\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  inputContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"60%\"\n  },\n  button: {\n    width: \"40%\"\n  }\n});\nexport default TodoInput;","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","Modal","Alert","Image","Header","jsx","_jsx","jsxs","_jsxs","TodoInput","props","_useState","_useState2","_slicedToArray","enteredTask","setEnteredTask","TodoInputHandler","enteredText","addTaskHandler","onAddTask","checkInput","length","alert","text","cancelable","visible","animationType","children","title","style","styles","inputContainer","placeholder","input","onChangeText","value","buttonContainer","button","color","onPress","onCancel","create","flex","justifyContent","alignItems","width","borderColor","borderWidth","padding","marginBottom","flexDirection"],"sources":["E:/todo-app/components/TodoInput.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  StyleSheet,\r\n  Modal,\r\n  Alert,\r\n  Image\r\n} from \"react-native\";\r\nimport Header from \"./Header\";\r\n \r\nconst TodoInput = props => {\r\n  const [enteredTask, setEnteredTask] = useState(\"\");\r\n \r\n  const TodoInputHandler = enteredText => {\r\n    setEnteredTask(enteredText);\r\n  };\r\n \r\n  const addTaskHandler = () => {\r\n    props.onAddTask(enteredTask);\r\n    setEnteredTask(\"\");\r\n  };\r\n \r\n  const checkInput = enteredTask => {\r\n    if (enteredTask.length > 0) addTaskHandler();\r\n    else {\r\n      Alert.alert(\"Error\", \"Please enter a Task\", [{ text: \"OK\" }], {\r\n        cancelable: false\r\n      });\r\n    }\r\n  };\r\n \r\n  return (\r\n    <Modal visible={props.visible} animationType=\"slide\">\r\n      <Header title=\"To-Do App\"></Header>\r\n \r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder=\"Task\"\r\n          style={styles.input}\r\n          onChangeText={TodoInputHandler}\r\n          value={enteredTask}\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n          <View style={styles.button}>\r\n            <Button\r\n              title=\"CANCEL\"\r\n              color=\"red\"\r\n              onPress={props.onCancel}\r\n            ></Button>\r\n          </View>\r\n          <View style={styles.button}>\r\n            <Button\r\n              title=\"ADD\"\r\n              color=\"green\"\r\n              onPress={() => checkInput(enteredTask)}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n \r\nconst styles = StyleSheet.create({\r\n  inputContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    width: \"60%\"\r\n  },\r\n  button: {\r\n    width: \"40%\"\r\n  }\r\n});\r\n \r\nexport default TodoInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}