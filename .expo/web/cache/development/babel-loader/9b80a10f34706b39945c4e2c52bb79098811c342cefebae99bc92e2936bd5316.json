{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this;\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TodoItem = function TodoItem(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    check = _useState2[0],\n    setCheck = _useState2[1];\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(View, {\n      style: styles.listItem,\n      children: _jsx(Text, {\n        children: props.title\n      })\n    }), _jsx(CheckBox, {\n      value: check,\n      onValueChange: function onValueChange() {\n        return setCheck(!check);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: props.onDelete.bind(_this, props.id),\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Delete\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  listItem: {\n    padding: 10,\n    backgroundColor: \"#eee\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    width: \"60%\"\n  },\n  screen: {\n    flexDirection: \"row\",\n    marginTop: 30,\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  button: {\n    display: \"flex\",\n    height: 40,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: \"red\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonGreen: {\n    display: \"flex\",\n    height: 40,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: \"green\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: 14,\n    color: \"white\"\n  }\n});\nexport default TodoItem;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","CheckBox","jsx","_jsx","jsxs","_jsxs","TodoItem","props","_useState","_useState2","_slicedToArray","check","setCheck","style","styles","screen","children","listItem","title","value","onValueChange","onPress","onDelete","bind","_this","id","button","text","create","padding","backgroundColor","borderColor","borderWidth","width","flexDirection","marginTop","justifyContent","display","height","borderRadius","alignItems","buttonGreen","fontSize","color"],"sources":["E:/todo-app/components/TodoItem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  CheckBox\r\n} from \"react-native\";\r\n \r\nconst TodoItem = props => {\r\n  const [check, setCheck] = useState(false);\r\n  return (\r\n    <View style={styles.screen}>\r\n      <View style={styles.listItem}>\r\n        <Text>{props.title}</Text>\r\n      </View>\r\n      <CheckBox value={check} onValueChange={() => setCheck(!check)} />\r\n      <TouchableOpacity\r\n        onPress={props.onDelete.bind(this, props.id)}\r\n        style={styles.button}\r\n      >\r\n        <Text style={styles.text}>Delete</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n \r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    padding: 10,\r\n    backgroundColor: \"#eee\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    width: \"60%\"\r\n  },\r\n  screen: {\r\n    flexDirection: \"row\",\r\n    marginTop: 30,\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    height: 40,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    backgroundColor: \"red\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  buttonGreen: {\r\n    display: \"flex\",\r\n    height: 40,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    backgroundColor: \"green\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: \"white\"\r\n  }\r\n});\r\n \r\nexport default TodoItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AASxC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,KAAK,EAAI;EACxB,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,OACEJ,KAAA,CAACR,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GACzBb,IAAA,CAACN,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACG,QAAS;MAAAD,QAAA,EAC3Bb,IAAA,CAACL,IAAI;QAAAkB,QAAA,EAAET,KAAK,CAACW;MAAK,CAAO;IAAC,CACtB,CAAC,EACPf,IAAA,CAACF,QAAQ;MAACkB,KAAK,EAAER,KAAM;MAACS,aAAa,EAAE,SAAAA,cAAA;QAAA,OAAMR,QAAQ,CAAC,CAACD,KAAK,CAAC;MAAA;IAAC,CAAE,CAAC,EACjER,IAAA,CAACH,gBAAgB;MACfqB,OAAO,EAAEd,KAAK,CAACe,QAAQ,CAACC,IAAI,CAACC,KAAI,EAAEjB,KAAK,CAACkB,EAAE,CAAE;MAC7CZ,KAAK,EAAEC,MAAM,CAACY,MAAO;MAAAV,QAAA,EAErBb,IAAA,CAACL,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACa,IAAK;QAAAX,QAAA,EAAC;MAAM,CAAM;IAAC,CACvB,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGf,UAAU,CAAC6B,MAAM,CAAC;EAC/BX,QAAQ,EAAE;IACRY,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,MAAM;IACvBC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE,CAAC;IACdC,KAAK,EAAE;EACT,CAAC;EACDlB,MAAM,EAAE;IACNmB,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE,EAAE;IACbC,cAAc,EAAE,eAAe;IAC/BH,KAAK,EAAE;EACT,CAAC;EACDP,MAAM,EAAE;IACNW,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfV,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,KAAK;IACtBU,UAAU,EAAE,QAAQ;IACpBJ,cAAc,EAAE;EAClB,CAAC;EACDK,WAAW,EAAE;IACXJ,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfV,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,OAAO;IACxBU,UAAU,EAAE,QAAQ;IACpBJ,cAAc,EAAE;EAClB,CAAC;EACDT,IAAI,EAAE;IACJe,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAerC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}